// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model2 "github.com/softplan/tenkai-api/pkg/dbms/model"
	"github.com/stretchr/testify/mock"
)

// ConfigDAOInterface is an autogenerated mock type for the ConfigDAOInterface type
type ConfigDAOInterface struct {
	mock.Mock
}

// CreateOrUpdateConfig provides a mock function with given fields: item
func (_m *ConfigDAOInterface) CreateOrUpdateConfig(item model2.ConfigMap) (int, error) {
	ret := _m.Called(item)

	var r0 int
	if rf, ok := ret.Get(0).(func(model2.ConfigMap) int); ok {
		r0 = rf(item)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model2.ConfigMap) error); ok {
		r1 = rf(item)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConfigByName provides a mock function with given fields: name
func (_m *ConfigDAOInterface) GetConfigByName(name string) (model2.ConfigMap, error) {
	ret := _m.Called(name)

	var r0 model2.ConfigMap
	if rf, ok := ret.Get(0).(func(string) model2.ConfigMap); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(model2.ConfigMap)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
