// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model2 "github.com/softplan/tenkai-api/pkg/dbms/model"
	"github.com/stretchr/testify/mock"
)

// ReleaseDAOInterface is an autogenerated mock type for the ReleaseDAOInterface type
type ReleaseDAOInterface struct {
	mock.Mock
}

// CreateRelease provides a mock function with given fields: release
func (_m *ReleaseDAOInterface) CreateRelease(release model2.Release) error {
	ret := _m.Called(release)

	var r0 error
	if rf, ok := ret.Get(0).(func(model2.Release) error); ok {
		r0 = rf(release)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteRelease provides a mock function with given fields: id
func (_m *ReleaseDAOInterface) DeleteRelease(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListRelease provides a mock function with given fields: chartName
func (_m *ReleaseDAOInterface) ListRelease(chartName string) ([]model2.Release, error) {
	ret := _m.Called(chartName)

	var r0 []model2.Release
	if rf, ok := ret.Get(0).(func(string) []model2.Release); ok {
		r0 = rf(chartName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model2.Release)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(chartName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
