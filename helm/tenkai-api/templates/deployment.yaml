apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "tenkai-api.fullname" . }}
  labels:
    app: {{ template "tenkai-api.name" . }}
    chart: {{ template "tenkai-api.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "tenkai-api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: {{ .Values.istio.enabled | quote }}
        traffic.sidecar.istio.io/excludeOutboundIPRanges: 0.0.0.0/0
      labels:
        app: {{ template "tenkai-api.name" . }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.app.pullSecret }}
      volumes:
        - name: tenkai-disk
          persistentVolumeClaim:
            claimName: tenkai-disk-claim
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: "/app/config"
              name: tenkai-disk
            - mountPath: "/app/.helm"
              name: tenkai-disk
          env:
            - name: APP_DBMS_URI
              value: {{ .Values.app.appDbmsUri }}
            - name: APP_PASSKEY
              value: {{ .Values.app.passkey}}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
